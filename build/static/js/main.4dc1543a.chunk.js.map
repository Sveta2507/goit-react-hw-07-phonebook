{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.scss","components/Logo/Logo.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Notifications/Notifications.js","redux/actions.js","components/Form/Form.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Logo/Logo.js","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["module","exports","id","Alert","disableAlert","props","change","clearTimeout","setTimeout","Component","addContacts","createAction","name","number","payload","contact","uuid","handleDelete","handleFilter","filter","postContacts","Form","state","alert","handleChange","event","target","value","setState","handleSubmit","preventDefault","addContact","changeAlert","bool","prevProps","prevState","isExists","this","TransitionGroup","className","classes","notif","CSSTransition","timeout","classNames","onSubmit","label","type","required","onChange","placeholder","button","connect","dispatch","toAddContacts","actions","mapDispatchToProps","onDelete","toPostContacts","contacts","items","toLowerCase","includes","deleteContact","onClick","Contactlist","component","styles","contactsUl","map","item","in","length","toFilter","Logo","isLoad","main","App","obj","find","elem","handleFilterChange","e","persistedTasks","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","ContactList","createReducer","contactsActions","action","el","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dc1543a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__34UGJ\",\"label\":\"Form_label__2bsO3\",\"button\":\"Form_button__APA9l\",\"enter\":\"Form_enter___jAku\",\"enterActive\":\"Form_enterActive__w1QRz\",\"exit\":\"Form_exit__IupVj\",\"exitActive\":\"Form_exitActive___Am43\",\"notif\":\"Form_notif__3CUG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsUl\":\"ContactList_contactsUl__238j-\",\"enter\":\"ContactList_enter__68BvN\",\"enterActive\":\"ContactList_enterActive__2QG12\",\"exit\":\"ContactList_exit__1Yw9L\",\"exitActive\":\"ContactList_exitActive__1dPxg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Logo_main__27UEv\",\"enter\":\"Logo_enter__DWjV1\",\"enterActive\":\"Logo_enterActive__3Zke0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ContactListItem_section__POJIv\",\"button\":\"ContactListItem_button__3J3Fs\",\"swing\":\"ContactListItem_swing__3XAS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1DS2X\",\"label\":\"Filter_label__W4GLr\"};","import React, { Component } from \"react\";\r\n\r\nlet id;\r\nclass Alert extends Component {\r\n  disableAlert = () => {\r\n    this.props.change(false);\r\n  };\r\n\r\n  componentDidMount() {\r\n    clearTimeout(id);\r\n  }\r\n\r\n  render() {\r\n    id = setTimeout(() => {\r\n      this.disableAlert();\r\n    }, 1700);\r\n\r\n    return (\r\n      <h4>\r\n        Warning! You are trying to add contact, which has already been added!\r\n      </h4>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Alert;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nconst addContacts = createAction(\"contact/add\", (name, number) => {\r\n  return {\r\n    payload: {\r\n      contact: {\r\n        name,\r\n        id: uuid(),\r\n        number,\r\n      },\r\n    },\r\n  };\r\n});\r\n\r\nconst handleDelete = createAction(\"contact/del\");\r\n\r\nconst handleFilter = createAction(\"contact/filter\", (filter) => ({\r\n  payload: { filter },\r\n}));\r\n\r\nconst postContacts = createAction(\"contacts/post\");\r\n\r\nexport default {\r\n  addContacts,\r\n  handleDelete,\r\n  handleFilter,\r\n  postContacts,\r\n};\r\n","import classes from \"./Form.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport { v4 as id } from \"uuid\";\r\nimport Alert from \"../Notifications/Notifications\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport actions from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    alert: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.isExists !== this.props.isExists) {\r\n      this.setState({ alert: this.props.isExists });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: id(),\r\n      number: number,\r\n      name: name,\r\n    };\r\n    this.props.addContact(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  changeAlert = (bool) => {\r\n    this.setState({ alert: bool });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <TransitionGroup className={classes.notif}>\r\n          {this.state.alert && (\r\n            <CSSTransition timeout={250} classNames={classes}>\r\n              <Alert change={this.changeAlert} />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={classes.label}>Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your name please\"\r\n            value={name}\r\n          />\r\n          <label className={classes.label}>Number: </label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            name=\"number\"\r\n            onChange={this.handleChange}\r\n            placeholder=\"Enter your phone number please\"\r\n            value={number}\r\n          />\r\n          <button type=\"submit\" className={classes.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    toAddContacts: (name, number) =>\r\n      dispatch(actions.addContacts(name, number)),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./ContactListItem.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nconst ContactlistItem = ({ id, number, name, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <li>\r\n        <p>{name}</p>\r\n        <p>{number}</p>\r\n        <button\r\n          className={classes.button}\r\n          type=\"button\"\r\n          onClick={() => deleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nContactlistItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const filteredNames = state.contacts.items.filter((contact) =>\r\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n  );\r\n  return {\r\n    contacts: filteredNames,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  onDelete: actions.handleDelete,\r\n  toPostContacts: actions.postContacts,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactlistItem);\r\n","import React from \"react\";\r\nimport { ContactlistItem } from \"../ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\n\r\nconst Contactlist = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.contactsUl}>\r\n      {contacts.map((item) => {\r\n        // console.log(item);\r\n        const { name, id, number } = item;\r\n        return (\r\n          <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames={styles}\r\n            in={contacts.length > 0}\r\n          >\r\n            <ContactlistItem\r\n              name={name}\r\n              number={number}\r\n              id={id}\r\n              deleteContact={deleteContact}\r\n            />\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactlist.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Contactlist;\r\n","import React from \"react\";\r\nimport classes from \"./Filter.module.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../redux/actions\";\r\n\r\nconst Filter = ({ onChange, value }) => {\r\n  return (\r\n    <CSSTransition in={value !== \"\"} timeout={0}>\r\n      <>\r\n        <label className={classes.label}>Filter:</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={value}\r\n          placeholder=\"Filter contacts if necessary\"\r\n        />\r\n      </>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  toFilter: actions.handleFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Logo.module.css\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Logo extends Component {\r\n  state = {\r\n    isLoad: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.setState({ isLoad: true });\r\n    }, 150);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <TransitionGroup className={classes.main}>\r\n        {this.state.isLoad && (\r\n          <CSSTransition timeout={500} classNames={classes}>\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n        )}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\n// import Notifications from \"./components/Notifications/Notifications\";\r\n// import { Title } from \"./components/Title\";\r\nimport { Form } from \"./components/Form\";\r\nimport { ContactList } from \"./components/ContactList\";\r\nimport { Filter } from \"./components/Filter\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Logo from \"./components/Logo/Logo\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    name: \"\",\r\n    filter: \"\",\r\n    isExists: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const persistedTasks = localStorage.getItem(\"conctacts\");\r\n    if (persistedTasks) {\r\n      this.setState({ contacts: JSON.parse(persistedTasks) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem(\"conctacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (obj) => {\r\n    const x = this.state.contacts.find((elem) => {\r\n      // return elem.name === obj.name && elem.number === obj.number;\r\n      return elem.name === obj.name;\r\n    });\r\n    if (x) {\r\n      this.setState({\r\n        isExists: true,\r\n      });\r\n      setTimeout(() => this.setState({ isExists: false }), 2000);\r\n      return;\r\n    }\r\n    this.setState((prevState) => {\r\n      return { contacts: [...prevState.contacts, obj], isExists: false };\r\n    });\r\n  };\r\n\r\n  deleteContact = (id) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  handleFilterChange = (e) => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter, isExists } = this.state;\r\n    const filteredContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n    return (\r\n      <>\r\n        <Logo />\r\n        {/* <Notifications name={name} isExists={isExists} /> */}\r\n\r\n        {/* <Title name=\"phonebook\" /> */}\r\n        <Form addContact={this.addContact} isExists={isExists} />\r\n        <Filter\r\n          filteredContacts={this.handleFilterChange}\r\n          value={this.state.filter}\r\n          onChange={this.handleFilterChange}\r\n        />\r\n\r\n        <CSSTransition in={contacts.length > 0} timeout={0}>\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        </CSSTransition>\r\n\r\n        {/* <CSSTransition\r\n          in={inProp}\r\n          timeout={200}\r\n          classNames=\"my-node\"\r\n          // unmountOnExit\r\n        > */}\r\n        {/* </CSSTransition> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from \"./actions.js\";\r\n\r\nconst toAddContact = (state, action) => {\r\n  const doubleName = state.find(\r\n    (el) => el.name === action.payload.contact.name\r\n  );\r\n  if (doubleName) {\r\n    alert(`${action.payload.contact.name} has already been added`);\r\n    return;\r\n  }\r\n  return [...state, action.payload.contact];\r\n};\r\n\r\nconst toDeleteContact = (state, action) =>\r\n  state.filter((contact) => contact.id !== action.payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.postContacts]: (state, action) =>\r\n    localStorage.getItem(\"contacts\")\r\n      ? JSON.parse(localStorage.getItem(\"contacts\"))\r\n      : state,\r\n  [contactsActions.addContacts]: toAddContact,\r\n  [contactsActions.handleDelete]: toDeleteContact,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactsActions.handleFilter]: (state, action) => action.payload.filter,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: reducer,\r\n  },\r\n});\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}